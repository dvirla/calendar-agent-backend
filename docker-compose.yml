version: '3.8'

services:
  # FastAPI backend service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/calendar_agent
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - AZURE_AI_API_KEY=${AZURE_AI_API_KEY}
      - AZURE_AI_O4_ENDPOINT=${AZURE_AI_O4_ENDPOINT}
      - AZURE_API_VERSION=${AZURE_API_VERSION:-2024-02-15-preview}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:5173}
      - AUTH_REDIRECT_URI=${AUTH_REDIRECT_URI:-http://localhost:8000/auth/callback}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - calendar-network

  # PostgreSQL database service
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=calendar_agent
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - calendar-network

  # Redis for caching (optional)
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - calendar-network

  # Adminer for database management (development only)
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - ADMINER_DEFAULT_SERVER=db
    networks:
      - calendar-network
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  calendar-network:
    driver: bridge

# Override for production
---
# docker-compose.prod.yml
version: '3.8'

services:
  api:
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/calendar_agent
    volumes: []  # Remove volume mount in production

  db:
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    
  adminer:
    profiles:
      - never  # Disable adminer in production